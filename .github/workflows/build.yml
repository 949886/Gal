name: Build

on: 
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.platform.system }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    strategy:
      fail-fast: false
      matrix:
        platform: 
          - name: Windows
            system: "ubuntu-latest"
            extension: ".exe"
          - name: macOS
            system: "macos-latest"
            extension: ".app"
          - name: Linux
            system: "ubuntu-latest"
            extension: ".x86_64"
          # - name: Web
          #   extension: ".html"
          # - name: Android
          #   system: "ubuntu-latest"
          #   extension: ".apk"
          # - name: iOS
          #   system: "macos-latest"
          #   extension: ".ipa"
    steps:
        # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # Setup .NET
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Restore Packages
        run: dotnet restore

      # Setup Godot
      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v1
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.3.0 # also valid: 4.0.0.rc1 or 4.0.0, etc
          use-dotnet: true
          include-templates: true

      - name: Verify Setup
        run: |
          dotnet --version
          godot --version


      # Build the project for each platform
      - name: Build Godot Solutions
        run: godot --headless --build-solutions --quit || exit 0

      - name: Build C# Projects
        run: dotnet build
        
      - name: Export Project
        run: |
          mkdir -v -p build
          godot --headless --verbose --export-release "${{ matrix.platform.name }}" ./build/${{ github.event.repository.name }}${{ matrix.platform.extension }}

      # Compress the build files and upload them as an artifact
      - name: Compress build files
        run: |
          cd build
          sudo zip -r ./${{ matrix.platform.name }}.zip *

      - name: Display structure of build files
        run: ls -R ./build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ./build/${{ matrix.platform.name }}.zip